<script type="text/javascript">

function SuperClass(name){
	this.name = name;
	this.books = ['html','css','javascript'];
}

SuperClass.prototype.getName = function(){
	console.log(this.name);
}

function SubClass(name, time){
	//试试吧,好改成.号看看有什么不一样
	SuperClass.call(this,name);
	this.time = time;
}

SubClass.prototype = new SuperClass();
SubClass.prototype.getTime = function(){
	console.log(this.time);
}

/**
使用构造函数继承时执行了一遍父类的构造函数
实现子类原型类式继承时又调用了一遍父类的构造函数
**/
var instance1 = new SubClass('js book',2014);
instance1.books.push('设计模式');
console.log(instance1.books);
instance1.getName();
instance1.getTime();

var instance2 = new SubClass('css book',2013);
console.log(instance2.books);
instance2.getName();
instance2.getTime();

</script>